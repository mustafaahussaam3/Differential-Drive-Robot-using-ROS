<?xml version="1.0" encoding="UTF-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro"  name="robot1" >

  <xacro:include filename="robo_core.xacro" />
  <xacro:include filename="inertial.xacro" />
  <xacro:include filename="$(find test)/urdf/plugin.gazebo" />

  <!-- behind the center of the two drive wheels to make the robot accelerated easier  -->
  <xacro:property name="chassis_x" value="-0.1" /> 
  <!-- <xacro:property name="chassis_y" value="0" />
  <xacro:property name="chassis_z" value="0" /> -->

  <xacro:property name="chassis_offset_z" value="${chassis_size_z/2}" />
  <xacro:property name="chassis_offset_x" value="${chassis_size_x/2}" />


  <xacro:property name="chassis_size_x" value="0.3" />
  <xacro:property name="chassis_size_y" value="0.3" />
  <xacro:property name="chassis_size_z" value="0.15" />


  <xacro:property name="wheel_radius" value="0.05" />
  <xacro:property name="wheel_length" value="0.04" />
-
  <!-- <xacro:property name="joint_right_wheel_x" value="0" /> -->
  <xacro:property name="joint_right_wheel_y" value="${(chassis_size_y/2)+(wheel_length/2)}" />
  <!-- <xacro:property name="joint_right_wheel_z" value="0" /> -->

  <xacro:property name="lidar_x" value="0" />
  <xacro:property name="lidar_y" value="${-1*chassis_size_y/2}" />
  <xacro:property name="lidar_z" value="${wheel_radius+chassis_size_z}" />

  <xacro:property name="lidar_z_offset" value="0" />

  <xacro:property name="chassis_mass" value="0.7" />
  <xacro:property name="wheel_mass" value="0.1" />
  <xacro:property name="caster_mass" value="0.05" />

  <xacro:property name="caster_x" value="0.24" />
  <xacro:property name="caster_radius" value="0.05" />



  <xacro:property name="CW" value="-1" />
  <xacro:property name="CCW" value="1" />




  <link name="base_link">
  </link>


  <!-- Chassis-->
<joint name="chassis_joint" type="fixed">
  <origin xyz="${chassis_x} 0 0" />
  <parent link="base_link"/>
  <child link="chassis"/>
</joint>

  <link name="chassis">
    <visual name="">
      <origin xyz="${chassis_offset_x} 0 ${chassis_offset_z}" />
      <geometry>
        <box size="${chassis_size_x} ${chassis_size_y} ${chassis_size_z}"/>
      </geometry>
      <material name="white"/>
    </visual>

    <collision name="">
      <origin xyz="${chassis_offset_x} 0 ${chassis_offset_z}" />
      <geometry>
        <box size="${chassis_size_x} ${chassis_size_y} ${chassis_size_z}"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="0.5" x="${chassis_size_x}" y="${chassis_size_y}" z="${chassis_size_z}">
      <origin xyz="${chassis_offset_x} 0 ${chassis_offset_z}" rpy ="0 0 0"/>
    </xacro:inertial_box>
  </link>

  <gazebo reference = "chassis">
      <material>Gazebo/White</material>
  </gazebo>

   <!-- righ wheel-->

   <joint name="right_wheel_joint" type="continuous">
    <origin xyz="0 -${joint_right_wheel_y} 0" rpy="${CCW*(pi/2)} 0 0.0"/>
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <axis xyz="0 0.0 ${CW}"/> 
  </joint>
   
  <link name="right_wheel">
    <visual name="">
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/> 
      </geometry>
      <material name="blue"/>
    </visual>

    <collision name="">
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/> 
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.1" length="${wheel_length}" radius="${wheel_radius}">
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_cylinder>
  </link> -->

  <gazebo reference = "right_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>


  <!-- left wheel-->
  <joint name="left_wheel_joint" type="continuous">
    <origin xyz="0 ${joint_right_wheel_y} 0" rpy="${CW*(pi/2)} 0 0.0"/>
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <axis xyz="0 0 ${CCW}"/> 
  </joint>
   
  <link name="left_wheel">
    <visual name="">
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/> 
      </geometry>
      <material name="blue"/>
    </visual>

    <collision name="">
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}"/> 
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.1" length="${wheel_length}" radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_cylinder>
  </link> -->

  <gazebo reference = "left_wheel">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- caster wheel-->

  <joint name="caster_joint" type="fixed">
    <origin xyz="${caster_x} 0 0" />
    <parent link="chassis"/>
    <child link="caster_link"/>
  </joint>

  <link name="caster_link">
    <visual name="">
        <geometry>
            <sphere radius="${caster_radius}"/>
        </geometry>
        <material name="black"/>
    </visual>

    <collision name="">
      <geometry>
          <sphere radius="${caster_radius}"/>
      </geometry>
    </collision>
    <xacro:inertial_sphere mass="0.1" radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_sphere>
  </link> 

  <gazebo reference = "caster_link">
    <material>Gazebo/Black</material>
    <!-- gazebo adding the coeffecient of friction -->
    <mu1 value="0.001" />
    <mu2 value="0.001" />

  </gazebo>

  <!-- lidar -->
  
<!-- 
  <joint name="lidar_joint" type="fixed">
    <origin xyz="${lidar_x} ${lidar_y} ${lidar_z}" rpy="0 0 -1.5708"/>
    <parent link="chassis"/>
    <child link="lidar"/>
  </joint>


  <link name="lidar">
    <collision>
      <origin xyz="0 0 ${lidar_z_offset}" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://test/meshes/hokuyo.dae"/>
      </geometry>
    </collision>

    <visual>
        <origin xyz="0 0 ${lidar_z_offset}" rpy="0 0 0"/>
        <geometry>
        <mesh filename="package://test/meshes/hokuyo.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 ${lidar_z_offset}" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link> -->





</robot>
